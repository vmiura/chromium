// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module cc.mojom;

import "cc/ipc/element_id.mojom";
import "cc/ipc/surface_id.mojom";
import "ui/gfx/geometry/mojo/geometry.mojom";
import "ui/gfx/mojo/transform.mojom";

struct BulkBuffer {
  array<uint32> backings;
  uint32 first_backing_begin;
  uint32 last_backing_end;
};

struct NinePatchLayerState {
  gfx.mojom.Rect border;
  bool fill_center;
  bool nearest_neighbor;
  gfx.mojom.Rect image_aperature;
  gfx.mojom.Rect layer_occlusion;
};

struct Region {
  array<gfx.mojom.Rect> rects;
};

struct PictureLayerState {
  Region last_updated_invalidation;
  gfx.mojom.Size gpu_raster_max_texture_size;
  bool nearest_neighbor;
  gfx.mojom.Rect recorded_viewport;
  gfx.mojom.Size size;
  bool requires_clear;
  bool is_solid_color;
  uint32 solid_color;
  uint32 background_color;
  uint32 display_list_id;
  BulkBuffer? display_list;
};

struct SurfaceLayerState {
  cc.mojom.SurfaceId id;
  gfx.mojom.Size size;
  float scale;
};

struct PaintedScrollbarLayerState {
  int32 scroll_layer_id;

  float internal_contents_scale;
  gfx.mojom.Size internal_content_bounds;
  int32 thumb_thickness;
  int32 thumb_length;
  int32 track_start;
  int32 track_length;
  float thumb_opacity;
  int32 track_ui_resource_id;
  int32 thumb_ui_resource_id;
};

struct LayerProperties {
  int32 layer_id;

  uint32 background_color;
  gfx.mojom.Size bounds;
  int32 transform_tree_index;
  int32 effect_tree_index;
  int32 clip_tree_index;
  int32 scroll_tree_index;
  gfx.mojom.Vector2dF offset_to_transform_parent;
  bool draws_content;
  bool layer_property_changed;
  bool masks_to_bounds;
  bool contents_opaque;
  gfx.mojom.PointF position;
  bool transform_is_animating;
  gfx.mojom.Transform transform;
  int32 scroll_clip_layer_id;
  cc.mojom.ElementId element_id;
  uint32 mutable_properties;
  gfx.mojom.Rect update_rect;
  bool has_will_change_transform_hint;

  NinePatchLayerState? nine_patch_state;
  PaintedScrollbarLayerState? painted_scrollbar_state;
  PictureLayerState? picture_state;
  SurfaceLayerState? surface_state;
};
